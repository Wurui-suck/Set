{"version":3,"sources":["main.js"],"names":["Set","item","element","Object","prototype","hasOwnProperty","call","has","keys","length","values","otherSet","unionSet","forEach","add","intersectionSet","otherValues","biggerSet","smallerSet","size","items","includes","differenceSet","isSubset","every","set1","set2","x","union","y","difference","console","dir","set3","log"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..\\scr","sourcesContent":["class Set {\r\n    constructor() {\r\n        this.item = {}\r\n    }\r\n    has(element) {\r\n        return Object.prototype.hasOwnProperty.call(this.item, element)\r\n    }\r\n    add(element) {\r\n        if (this.has(element)) {\r\n            return false\r\n        }\r\n        else {\r\n            this.item[element] = element\r\n            return true\r\n        }\r\n    }\r\n    delete(element) {\r\n        if (this.has(element)) {\r\n            return false\r\n        }\r\n        else {\r\n            delete this.item[element]\r\n            return true\r\n        }\r\n    }\r\n    clear() {\r\n        this.item = {}\r\n    }\r\n    size() {\r\n        return Object.keys(this.item).length\r\n    }\r\n    values() {\r\n        return Object.values(this.item)\r\n    }\r\n    //并集\r\n    union(otherSet) {\r\n        const unionSet = new Set\r\n        this.values().forEach(item => unionSet.add(item))\r\n        otherSet.values().forEach(item => unionSet.add(item))\r\n        return unionSet\r\n    }\r\n    //交集\r\n    intersection(otherSet) {\r\n        const intersectionSet = new Set()\r\n        const values = this.values()\r\n        const otherValues = otherSet.values()\r\n        let biggerSet\r\n        let smallerSet\r\n        if (this.size() >= otherSet.size()) {\r\n            biggerSet = values\r\n            smallerSet = otherValues\r\n        } else {\r\n            biggerSet = otherValues\r\n            smallerSet = values\r\n        }\r\n        smallerSet.forEach(items => {\r\n            if (biggerSet.includes(items)) {\r\n                intersectionSet.add(items)\r\n            }\r\n        })\r\n        return intersectionSet\r\n    }\r\n    //差集\r\n    difference(otherSet) {\r\n        const differenceSet = new Set()\r\n        const values = this.values()\r\n        const otherValues = otherSet.values()\r\n        values.forEach(items => {\r\n            if (!(otherValues.includes(items))) {\r\n                differenceSet.add(items)\r\n            }\r\n        })\r\n        return differenceSet\r\n    }\r\n    //子集\r\n    isSubsetOf(otherSet) {\r\n        if (this.values().length === 0) {\r\n            return true\r\n        }\r\n        if (this.size() > otherSet.size()) {\r\n            return false\r\n        }\r\n        let isSubset = true\r\n        this.values().every(items => {\r\n            if (!(otherSet.has(items))) {\r\n                isSubset = false\r\n                return false\r\n            } else {\r\n                return true\r\n            }\r\n        })\r\n        return isSubset\r\n    }\r\n\r\n\r\n}\r\nlet set1 = new Set()\r\nlet set2 = new Set()\r\nset1.add(1)\r\nset1.add(5)\r\nset2.add(5)\r\nset2.add(2)\r\nlet x = set1.union(set2)\r\nlet y = set1.difference(set2)\r\nconsole.dir(y)\r\nlet set3 = new Set()\r\nconsole.log(set3.size())"]}